name: Branch Name Validation

permissions:
  contents: read

on:
  push:
    branches-ignore:
      - main
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  check-branch-name:
    name: Check Branch Name
    runs-on: ubuntu-latest

    outputs:
      branch_valid: ${{ steps.validate.outputs.branch_valid }}

    steps:
      - name: Branch Name Validation
        id: validate
        shell: bash
        run: |
          BRANCH_NAME="${GITHUB_HEAD_REF:-${GITHUB_REF_NAME:-${GITHUB_REF#refs/heads/}}}"
          echo "Checking branch: $BRANCH_NAME"

          # Allow main explicitly
          if [[ "$BRANCH_NAME" == "main" ]]; then
            echo "Branch is main. OK."
            echo "branch_valid=true" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          # Bash-compatible pattern (note: Bash's =~ uses POSIX ERE; PCRE-only constructs like (?: ) are NOT supported)
          # - category: one of the allowed prefixes
          # - slug: 3-50 chars, lowercase letters or digits, may include '-' or '_' inside
          #   but MUST start and end with an alphanumeric character (no leading/trailing -/_)
          # Examples: feature/add_something, bug/fix-login-issue, docs/update-readme
          PATTERN='^(feature|bug|fix|chore|docs|test|testing|performance|refactor|ci\-cd|build|release|hotfix|experiment|task|security|special|status)\/[a-z0-9][a-z0-9_-]{1,48}[a-z0-9]$'

          echo "Using PATTERN: $PATTERN"

          # Stepwise diagnostics to find which rule fails
          # 1) Exactly one '/'
          if [[ "$BRANCH_NAME" != */* || "$BRANCH_NAME" == */*/* ]]; then
            echo "FAIL: Branch must contain exactly one '/'. Found: '$BRANCH_NAME'"
            echo "branch_valid=false" >> "$GITHUB_OUTPUT"
            exit 1
          else
            echo "OK: Exactly one '/'."
          fi

          CATEGORY=${BRANCH_NAME%%/*}
          SLUG=${BRANCH_NAME#*/}

          # 2) Category allowed
          ALLOWED_CATEGORIES=(feature bug fix chore docs test testing performance refactor ci-cd build release hotfix experiment task security special status)
          ALLOWED=false
          for c in "${ALLOWED_CATEGORIES[@]}"; do
            if [[ "$c" == "$CATEGORY" ]]; then ALLOWED=true; break; fi
          done
          if ! $ALLOWED; then
            echo "FAIL: Category '$CATEGORY' is not in allowed list: ${ALLOWED_CATEGORIES[*]}"
            echo "branch_valid=false" >> "$GITHUB_OUTPUT"
            exit 1
          else
            echo "OK: Category '$CATEGORY' is allowed."
          fi

          # 3) Slug length 3..50
          len=${#SLUG}
          if (( len < 3 || len > 50 )); then
            echo "FAIL: Slug length is $len, must be 3..50. Slug='$SLUG'"
            echo "branch_valid=false" >> "$GITHUB_OUTPUT"
            exit 1
          else
            echo "OK: Slug length is $len."
          fi

          # 4) Slug allowed characters
          if [[ ! "$SLUG" =~ ^[a-z0-9_-]+$ ]]; then
            echo "FAIL: Slug contains invalid characters; allowed a-z 0-9 - _. Slug='$SLUG'"
            echo "branch_valid=false" >> "$GITHUB_OUTPUT"
            exit 1
          else
            echo "OK: Slug characters valid (a-z0-9-_)."
          fi

          # 5) Slug must start and end with alphanumeric
          first=${SLUG:0:1}
          last=${SLUG: -1}
          if [[ ! "$first" =~ [a-z0-9] ]] || [[ ! "$last" =~ [a-z0-9] ]]; then
            echo "FAIL: Slug must start and end with alphanumeric. Starts with '$first', ends with '$last'."
            echo "branch_valid=false" >> "$GITHUB_OUTPUT"
            exit 1
          else
            echo "OK: Slug starts/ends with alphanumeric."
          fi

          # 6) Final check: full PATTERN with Bash =~ (POSIX ERE)
          if [[ "$BRANCH_NAME" =~ $PATTERN ]]; then
            echo "âœ… Branch name is valid: $BRANCH_NAME"
            echo "branch_valid=true" >> "$GITHUB_OUTPUT"
            exit 0
          else
            echo "FAIL: Full PATTERN did not match when evaluated by Bash =~"
            echo "Common causes:"
            echo "  - Use of PCRE-only constructs like '(?: )' (not supported by Bash/grep POSIX ERE)."
            echo "  - Unescaped special characters inside the category alternatives (e.g. hyphen needs '\\-')."
            echo "PATTERN used: $PATTERN"
            echo "branch_valid=false" >> "$GITHUB_OUTPUT"
            exit 1
          fi
